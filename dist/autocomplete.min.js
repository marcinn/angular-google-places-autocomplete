"use strict";angular.module("google.places",[]).factory("googlePlacesApi",["$window",function(e){if(!e.google)throw"Global `google` var missing. Did you forget to include the places API script?";return e.google}]).directive("gPlacesAutocomplete",["$parse","$compile","$timeout","$document","googlePlacesApi",function(e,t,n,i,c){return{restrict:"A",require:"^ngModel",scope:{model:"=ngModel",options:"=?",forceSelection:"=?",customPlaces:"=?",formatter:"&"},controller:["$scope",function(){}],link:function(e,o,r,s){function l(){o.bind("keydown",p),o.bind("blur",d),o.bind("submit",d),e.$watch("selected",f)}function a(){var n,c=angular.element("<div g-places-autocomplete-drawer></div>"),o=angular.element(i[0].body);c.attr({input:"input",query:"query",predictions:"predictions",active:"active",selected:"selected"}),n=t(c)(e),o.append(n)}function u(){s.$parsers.push(g),r.formatter?s.$formatters.push(e.formatter()):s.$formatters.push(m),s.$render=h}function p(t){0!==e.predictions.length&&-1!==_(O,t.which)&&(t.preventDefault(),t.which===x.down?(e.active=(e.active+1)%e.predictions.length,e.$digest()):t.which===x.up?(e.active=(e.active?e.active:e.predictions.length)-1,e.$digest()):13===t.which||9===t.which?(e.forceSelection&&(e.active=-1===e.active?0:e.active),e.$apply(function(){e.selected=e.active,-1===e.selected&&v()})):27===t.which&&e.$apply(function(){t.stopPropagation(),v()}))}function d(){0!==e.predictions.length&&(e.forceSelection&&(e.selected=-1===e.selected?0:e.selected),e.$digest(),e.$apply(function(){-1===e.selected&&v()}))}function f(){var t;t=e.predictions[e.selected],t&&(t.is_custom?e.$apply(function(){e.model=t.place,e.$emit("g-places-autocomplete:select",t.place),n(function(){s.$viewChangeListeners.forEach(function(e){e()})})}):q.getDetails({placeId:t.place_id},function(t,i){i==c.maps.places.PlacesServiceStatus.OK&&e.$apply(function(){e.model=t,e.$emit("g-places-autocomplete:select",t),n(function(){s.$viewChangeListeners.forEach(function(e){e()})})})}),v())}function g(t){var n;return t&&y(t)?(e.query=t,n=angular.extend({input:t},e.options),S.getPlacePredictions(n,function(t,n){e.$apply(function(){var i;v(),e.customPlaces&&(i=$(e.query),e.predictions.push.apply(e.predictions,i)),n==c.maps.places.PlacesServiceStatus.OK&&e.predictions.push.apply(e.predictions,t),e.predictions.length>5&&(e.predictions.length=5)})}),e.forceSelection?s.$modelValue:t):t}function m(e){var t="";return y(e)?t=e:w(e)&&(t=e.formatted_address),t}function h(){return o.val(s.$viewValue)}function v(){e.active=-1,e.selected=-1,e.predictions=[]}function $(t){var n,i,c,o=[];for(c=0;c<e.customPlaces.length;c++)n=e.customPlaces[c],i=b(t,n),i.matched_substrings.length>0&&o.push({is_custom:!0,custom_prediction_label:n.custom_prediction_label||"(Custom Non-Google Result)",description:n.formatted_address,place:n,matched_substrings:i.matched_substrings,terms:i.terms});return o}function b(e,t){var n,i,c,o=e+"",r=[],s=[];for(i=t.formatted_address.split(","),c=0;c<i.length;c++)n=i[c].trim(),o.length>0&&(n.length>=o.length?(P(n,o)&&s.push({length:o.length,offset:c}),o=""):P(o,n)?(s.push({length:n.length,offset:c}),o=o.replace(n,"").trim()):o=""),r.push({value:n,offset:t.formatted_address.indexOf(n)});return{matched_substrings:s,terms:r}}function y(e){return"[object String]"==Object.prototype.toString.call(e)}function w(e){return"[object Object]"==Object.prototype.toString.call(e)}function _(e,t){var n,i;if(null==e)return-1;for(i=e.length,n=0;i>n;n++)if(e[n]===t)return n;return-1}function P(e,t){return 0===A(e).lastIndexOf(A(t),0)}function A(e){return null==e?"":e.toLowerCase()}var x={tab:9,enter:13,esc:27,up:38,down:40},O=[x.tab,x.enter,x.esc,x.up,x.down],S=new c.maps.places.AutocompleteService,q=new c.maps.places.PlacesService(o[0]);!function(){e.query="",e.predictions=[],e.input=o,e.options=e.options||{},a(),l(),u()}()}}}]).directive("gPlacesAutocompleteDrawer",["$window","$document",function(e,t){var n=['<div class="pac-container" ng-if="isOpen()" ng-style="{top: position.top+\'px\', left: position.left+\'px\', width: position.width+\'px\'}" style="display: block;" role="listbox" aria-hidden="{{!isOpen()}}">','  <div class="pac-item" g-places-autocomplete-prediction index="$index" prediction="prediction" query="query"','       ng-repeat="prediction in predictions track by $index" ng-class="{\'pac-item-selected\': isActive($index) }"','       ng-mouseenter="selectActive($index)" ng-click="selectPrediction($index)" role="option" id="{{prediction.id}}">',"  </div>","</div>"];return{restrict:"A",scope:{input:"=",query:"=",predictions:"=",active:"=",selected:"="},template:n.join(""),link:function(n,i){function c(n){var i=n[0],c=i.getBoundingClientRect(),o=t[0].documentElement,r=t[0].body,s=e.pageYOffset||o.scrollTop||r.scrollTop,l=e.pageXOffset||o.scrollLeft||r.scrollLeft;return{width:c.width,height:c.height,top:c.top+c.height+s,left:c.left+l}}i.bind("mousedown",function(e){e.preventDefault()}),e.onresize=function(){n.$apply(function(){n.position=c(n.input)})},n.isOpen=function(){return n.predictions.length>0},n.isActive=function(e){return n.active===e},n.selectActive=function(e){n.active=e},n.selectPrediction=function(e){n.selected=e},n.$watch("predictions",function(){n.position=c(n.input)},!0)}}}]).directive("gPlacesAutocompletePrediction",[function(){var e=['<span class="pac-icon pac-icon-marker"></span>','<span class="pac-item-query" ng-bind-html="prediction | highlightMatched"></span>','<span ng-repeat="term in prediction.terms | unmatchedTermsOnly:prediction">{{term.value | trailingComma:!$last}}&nbsp;</span>','<span class="custom-prediction-label" ng-if="prediction.is_custom">&nbsp;{{prediction.custom_prediction_label}}</span>'];return{restrict:"A",scope:{index:"=",prediction:"=",query:"="},template:e.join("")}}]).filter("highlightMatched",["$sce",function(e){return function(t){var n,i="",c="";return t.matched_substrings.length>0&&t.terms.length>0&&(n=t.matched_substrings[0],i=t.terms[0].value.substr(n.offset,n.length),c=t.terms[0].value.substr(n.offset+n.length)),e.trustAsHtml('<span class="pac-matched">'+i+"</span>"+c)}}]).filter("unmatchedTermsOnly",[function(){return function(e,t){var n,i,c=[];for(n=0;n<e.length;n++)i=e[n],t.matched_substrings.length>0&&i.offset>t.matched_substrings[0].length&&c.push(i);return c}}]).filter("trailingComma",[function(){return function(e,t){return t?e+",":e}}]);